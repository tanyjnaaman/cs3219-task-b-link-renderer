name: CI/CD Pipeline
on:
  pull_request:
    branches: [staging]
permissions:
  id-token: write
  contents: read

jobs:
  # continuous-integration:
  #   # same contents as .env.sample
  #   env:
  #     ENV: DEV
  #     PORT: 8000
  #     HOST: 0.0.0.0
  #     MONGODB_LOCAL_URI: mongodb://localhost:27017/
  #     FRONTEND_HOST: http://localhost:3000
  #     JWT_SECRET: token

  #   runs-on: ubuntu-latest
  #   strategy:
  #     matrix:
  #       python-version: ["3.8"]

  #   steps:
  #     - uses: actions/checkout@v3

  #     - name: Set up Python ${{ matrix.python-version }}
  #       uses: actions/setup-python@v4
  #       with:
  #         python-version: ${{ matrix.python-version }}

  #     - name: Install dependencies
  #       run: |
  #         cd backend
  #         python -m pip install --upgrade pip
  #         pip install pytest
  #         if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
  #     - name: Start MongoDB
  #       uses: supercharge/mongodb-github-action@1.8.0

  #     - name: Test with pytest
  #       run: |
  #         cd backend
  #         ENV=TEST python -m pytest

  continuous-deployment:
    runs-on: ubuntu-latest
    # needs: [continuous-integration]

    steps:
      # Step 1
      - name: Create CodeDeploy Deployment
        id: deploy
        run: |
          AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }} \
          AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }} \
          AWS_EC2_METADATA_DISABLED=true \
          AWS_DEFAULT_REGION=ap-northeast-1 \
          AWS_DEFAULT_OUTPUT=json \
          aws deploy create-deployment \
            --application-name link-renderer \
            --deployment-group-name link-renderer-backend \
            --deployment-config-name CodeDeployDefault.OneAtATime \
            --github-location repository=${{ github.repository }},commitId=${{ github.sha }}
